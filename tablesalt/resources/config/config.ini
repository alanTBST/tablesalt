[DEFAULT]

# rejsekort data configuration
[rejsekort_touches]

Fi = 1
Co = 2
Su = 3
Tr = 4
Io = 6
Cc = 7
Cuv = 8
Cud = 9
Cu = 10

#gtfs/transitfeed configuration
[old_route_type_map]

0: 900
1: 400
2: 100
3: 700
4: 1200

[current_rail_types]

codes = [
	100, 101, 102,
    103, 104, 105,
    106, 107, 108,
    109, 110, 111,
    112, 113, 114,
    115, 116, 117,
	400, 401, 402,
    403, 404, 405
	]

[current_bus_types]

codes = [
	700, 701, 702,
	703, 704, 705, 
	706, 707, 708, 
	710, 711, 712, 
	713, 714, 715, 
	716
	]

[rejseplanen]

gtfs_url = http://www.rejseplanen.info/labs/GTFS.zip
stops_url = http://www.rejseplanen.info/labs/RejseplanenStoppesteder.zip
location_url = http://xmlopen.rejseplanen.dk/bin/rest.exe//location?input={}
stops_nearby_url = http://xmlopen.rejseplanen.dk/bin/rest.exe//stopsNearby?coordX={}&coordY={}&maxRadius={}&maxNumber={}
all_files = [
	'calendar.txt', 
	'calendar_dates.txt',
	'agency.txt',
    'stops.txt',
    'routes.txt',
    'trips.txt',
    'stop_times.txt',
    'attributions.txt', 
    'frequencies.txt', 
    'transfers.txt',
    'shapes.txt', 
	'pathways.txt', 
	'feed_info.txt', 
	'levels.txt',
	'fare_attributions.txt',
	'fare_rules', 
	'translations.txt'
	]
required_files = [
	'agency.txt',
	'stops.txt',
	'routes.txt',
	'trips.txt',
	'stop_times.txt',
	'calendar.txt',
	'calendar_dates.txt',
	]

# NETWORK CONFIGURATION
[suburban_platform_numbers]

8600622: 8690622
8600626: 8690626
8600659: 8690659
8600674: 8690674
8600683: 8690683
8600740: 8690740
8600792: 8690792
8600798: 8690798
8600803: 8690803
8600999: 8690999

# use this as a method to determine the suburban operator
[suburban_farum_cph]
test_stops = [
	8600696, 8600695, 8600694
	]
# find metro operator
[metro_lindevang]
test_stops = [
	8603303, 86003304, 8603305
	]

# find operator of kastrup banen
[kastrup_cph]
test_stops = [
	8600858, 8600857, 8600856
	]

[metro_platform_numbers]
8600703: 8603301
8600736: 8603302
8600646: 8603307
8600856: 8603315
8600858: 8603328
8600650: 8603334
8600626: 8603330
8600642: 8603339

# OPERATOR CONFIGURATION
[bus_operators]

th = movia_h
tv = movia_v
ts = movia_s


[rail_network_operators]

suburban = DSB S-tog
kystbanen = DSB
fjernregional = DSB


[solo_zone_price_th]

[solo_zone_price_ts]

[solo_zone_price_tv]

[solo_zone_price_sj]


# REVENUE OUTPUT CONFIGURATION
[trip_numbers]

minimum_trips = 1
maximum_trips = false


# what salgsmedie indicate that a trip starts with a specific operator
[start_locations]

automat = metro
nautila = DSB
enkeltbilletter bus = movia
lokaltog-automater i 25 nordsjællandske togsæt = movia
use_locations = false

# what ticket types should be modelled with rejsekort classic trips
# to add to the list ---> type4 = 'new_ticket_type'
[single_tickets]

type1 = enkeltbillet
type2 = lang enkeltbillet
type3 = forsorgsbilleter

# what ticket types should be modelled with rejsekort penderkombi trips
[pendler_tickets]

type1 = pendlerkort
type2 = erhvervskort
type3 = virksomhedskort
type4 = pensionistkort
type5 = ungdomskort xu
type6 = flexcard 7 dage
type7 = flexcard
type8 = ungdomskort vu
type9 = ungdomskort uu
type10 = skolekort

# what ticket types should be modelled with zone 1001, 1002, 1003, 1004 trips
[city_pass_small]

type1 = city pass small
type2 = citypass small 24 timer
type3 = citypass small 120 timer	
type4 = citypass small 48 timer
type5 = citypass small 72 timer
type6 = citypass small 96 timer	
type7 = mobilklippekort
type8 = park and ride

# what ticket types should be modelled with any hovedstaded zone (1001 -1099) trips
[city_pass_large]

type1 = bornholmtrafikken
type2 = dsb-salg uspecificeret
type3 = ungdomskort uu - fritid
type4 = ungdomskort uu - kompensation
type5 = ungdomskort vu - fritid
type6 = ungdomskort vu - kompensation
type7 = ungdomskort xu - fritid
type8 = dsb-salg uspecificeret
type9 = enkeltbillet refusion
type10 = print-selv-billet
type11 = turistbillet
type12 = mobilklippekort
type13 = off peak-kompensation
type14 = blindekort
type15 = institutionskort, 15 børn
	